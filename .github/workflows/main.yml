name: Build
on:
  push:
    branches:
    - master
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    steps:
    - name: Install Mingw-w64
      shell: bash
      run: sudo apt-get -y install gcc-mingw-w64-i686

    - name: Install nightly toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: i686-pc-windows-gnu
        components: rustfmt

    - name: Checkout mech3msg repo
      uses: actions/checkout@v2
      with:
        repository: tobywf/mech3msg

    - name: Checkout build repository
      uses: actions/checkout@v2
      with:
        path: input

    - name: Copy Mech3Msg
      shell: bash
      run: cp input/Mech3Msg.json .

    - name: Build release binary
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose --release --target "i686-pc-windows-gnu"

    - name: Debug
      shell: bash
      run: find . -type f -name "mech3msg.dll"

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ github.sha }}
        release_name: Build ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload release binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/i686-pc-windows-gnu/release/mech3msg.dll
        asset_name: Mech3Msg.dll
        asset_content_type: application/octet-stream
